<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.dao.ContractUserMapper" >
  <resultMap id="BaseResultMap" type="com.springmvc.entity.ContractUser" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="user_role" property="userRole" jdbcType="VARCHAR" />
    <result column="user_company_code" property="userCompanyCode" jdbcType="VARCHAR" />
    <result column="user_tenant_code" property="userTenantCode" jdbcType="VARCHAR" />
    <result column="user_status" property="userStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_code, user_name, user_password, user_role,user_company_code, user_tenant_code,
    user_status
  </sql>

  <select id="getAllContractUserInfo" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from contract_user where user_status=1
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from contract_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectByUserCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from contract_user
    where user_code = #{userCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from contract_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springmvc.entity.ContractUser" >
    insert into contract_user (user_id, user_code, user_name, 
      user_password, user_role,user_company_code, user_tenant_code,
      user_status)
    values (#{userId,jdbcType=INTEGER}, #{userCode,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userPassword,jdbcType=VARCHAR}, #{userRole,jdbcType=VARCHAR}, #{userCompanyCode,jdbcType=VARCHAR}, #{userTenantCode,jdbcType=VARCHAR},
      #{userStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.entity.ContractUser" >
    insert into contract_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userCode != null" >
        user_code,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="useRole != null" >
        user_role,
      </if>
      <if test="userCompanyCode != null" >
        user_company_code,
      </if>
      <if test="userTenantCode != null" >
        user_tenant_code,
      </if>
      <if test="userStatus != null" >
        user_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userCode != null" >
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null" >
        #{userRole,jdbcType=VARCHAR},
      </if>
      <if test="userCompanyCode != null" >
        #{userCompanyCode,jdbcType=VARCHAR},
      </if>
      <if test="userTenantCode != null" >
        #{userTenantCode,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        #{userStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.entity.ContractUser" >
    update contract_user
    <set >
      <if test="userCode != null" >
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null" >
        user_role = #{userRole,jdbcType=VARCHAR},
      </if>
      <if test="userCompanyCode != null" >
        user_company_code = #{userCompanyCode,jdbcType=VARCHAR},
      </if>
      <if test="userTenantCode != null" >
        user_tenant_code = #{userTenantCode,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.entity.ContractUser" >
    update contract_user
    set user_code = #{userCode,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_role = #{userRole,jdbcType=VARCHAR},
      user_company_code = #{userCompanyCode,jdbcType=VARCHAR},
      user_tenant_code = #{userTenantCode,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>